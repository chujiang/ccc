<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EntityReadPermission">
  <resultMap id="BaseResultMap" type="com.kingnod.etraining.security.entity.EntityReadPermission">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
    <result column="A_ENTITY_ID" jdbcType="DECIMAL" property="entityId" />
    <result column="A_ENTITY_TYPE" jdbcType="VARCHAR" property="entityType" />
    <result column="A_OWNER_TYPE" jdbcType="CHAR" property="ownerType" />
    <result column="A_OWNER_0" jdbcType="DECIMAL" property="owner0" />
    <result column="A_USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="A_OWNER_1" jdbcType="DECIMAL" property="owner1" />
    <result column="A_OWNER_2" jdbcType="DECIMAL" property="owner2" />
    <result column="A_OWNER_3" jdbcType="DECIMAL" property="owner3" />
    <result column="A_OWNER_4" jdbcType="DECIMAL" property="owner4" />
    <result column="A_OWNER_5" jdbcType="DECIMAL" property="owner5" />
    <result column="A_OWNER_6" jdbcType="DECIMAL" property="owner6" />
    <result column="A_OWNER_7" jdbcType="DECIMAL" property="owner7" />
    <result column="A_OWNER_8" jdbcType="DECIMAL" property="owner8" />
    <result column="A_OWNER_9" jdbcType="DECIMAL" property="owner9" />
    <result column="A_OWNER_10" jdbcType="DECIMAL" property="owner10" />
    <result column="A_OWNER_11" jdbcType="DECIMAL" property="owner11" />
    <result column="A_OWNER_12" jdbcType="DECIMAL" property="owner12" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
    A.ENTITY_ID as A_ENTITY_ID, A.ENTITY_TYPE as A_ENTITY_TYPE, A.OWNER_TYPE as A_OWNER_TYPE, 
    A.OWNER_0 as A_OWNER_0, A.USER_ID as A_USER_ID, A.OWNER_1 as A_OWNER_1, A.OWNER_2 as A_OWNER_2, 
    A.OWNER_3 as A_OWNER_3, A.OWNER_4 as A_OWNER_4, A.OWNER_5 as A_OWNER_5, A.OWNER_6 as A_OWNER_6, 
    A.OWNER_7 as A_OWNER_7, A.OWNER_8 as A_OWNER_8, A.OWNER_9 as A_OWNER_9, A.OWNER_10 as A_OWNER_10, 
    A.OWNER_11 as A_OWNER_11, A.OWNER_12 as A_OWNER_12
  </sql>
  <delete id="deleteByCriteria" parameterType="com.kingnod.core.criteria.Criteria">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
    delete A from SYS_ENTITY_READ_PERMISSION A
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
  </delete>
  <insert id="insert" parameterType="com.kingnod.etraining.security.entity.EntityReadPermission">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
    insert into SYS_ENTITY_READ_PERMISSION (ENTITY_ID, ENTITY_TYPE, OWNER_TYPE, 
      OWNER_0, USER_ID, OWNER_1, 
      OWNER_2, OWNER_3, OWNER_4, 
      OWNER_5, OWNER_6, OWNER_7, 
      OWNER_8, OWNER_9, OWNER_10, 
      OWNER_11, OWNER_12)
    values (#{entityId,jdbcType=DECIMAL}, #{entityType,jdbcType=VARCHAR}, #{ownerType,jdbcType=CHAR}, 
      #{owner0,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, #{owner1,jdbcType=DECIMAL}, 
      #{owner2,jdbcType=DECIMAL}, #{owner3,jdbcType=DECIMAL}, #{owner4,jdbcType=DECIMAL}, 
      #{owner5,jdbcType=DECIMAL}, #{owner6,jdbcType=DECIMAL}, #{owner7,jdbcType=DECIMAL}, 
      #{owner8,jdbcType=DECIMAL}, #{owner9,jdbcType=DECIMAL}, #{owner10,jdbcType=DECIMAL}, 
      #{owner11,jdbcType=DECIMAL}, #{owner12,jdbcType=DECIMAL})
  </insert>
  <select id="countByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
    select count(*) from SYS_ENTITY_READ_PERMISSION A
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
  </select>
  <update id="updateByCriteria" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-10 19:43.
    -->
    update SYS_ENTITY_READ_PERMISSION A
    <set>
      <if test="record.entityId != null">
        A.ENTITY_ID = #{record.entityId,jdbcType=DECIMAL},
      </if>
      <if test="record.entityType != null">
        A.ENTITY_TYPE = #{record.entityType,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        A.OWNER_TYPE = #{record.ownerType,jdbcType=CHAR},
      </if>
      <if test="record.owner0 != null">
        A.OWNER_0 = #{record.owner0,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        A.USER_ID = #{record.userId,jdbcType=DECIMAL},
      </if>
      <if test="record.owner1 != null">
        A.OWNER_1 = #{record.owner1,jdbcType=DECIMAL},
      </if>
      <if test="record.owner2 != null">
        A.OWNER_2 = #{record.owner2,jdbcType=DECIMAL},
      </if>
      <if test="record.owner3 != null">
        A.OWNER_3 = #{record.owner3,jdbcType=DECIMAL},
      </if>
      <if test="record.owner4 != null">
        A.OWNER_4 = #{record.owner4,jdbcType=DECIMAL},
      </if>
      <if test="record.owner5 != null">
        A.OWNER_5 = #{record.owner5,jdbcType=DECIMAL},
      </if>
      <if test="record.owner6 != null">
        A.OWNER_6 = #{record.owner6,jdbcType=DECIMAL},
      </if>
      <if test="record.owner7 != null">
        A.OWNER_7 = #{record.owner7,jdbcType=DECIMAL},
      </if>
      <if test="record.owner8 != null">
        A.OWNER_8 = #{record.owner8,jdbcType=DECIMAL},
      </if>
      <if test="record.owner9 != null">
        A.OWNER_9 = #{record.owner9,jdbcType=DECIMAL},
      </if>
      <if test="record.owner10 != null">
        A.OWNER_10 = #{record.owner10,jdbcType=DECIMAL},
      </if>
      <if test="record.owner11 != null">
        A.OWNER_11 = #{record.owner11,jdbcType=DECIMAL},
      </if>
      <if test="record.owner12 != null">
        A.OWNER_12 = #{record.owner12,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
  </update>

  <select id="getReadPermissionByEntityId" parameterType="java.util.Map" resultType="com.kingnod.etraining.security.entity.EntityReadPermission">
    <!-- WARNING - @自定义  查询读取权限  -->
    select * from sys_entity_read_permission where entity_id = #{entityId} and entity_type = #{entityType}
  </select>
  
  <select id="findReadAthorityObj" parameterType="java.util.Map" resultType="java.lang.Long">
    <!--
      WARNING - @自定义  查询读取权限
    -->
    select ${column} from sys_entity_read_permission 
    where entity_id = #{entityId} and entity_type = #{entityType} and owner_type = #{ownerType}
  </select>
  
  <select id="findReadAthority" parameterType="java.util.Map" resultType="java.lang.Long">
    <!--
      WARNING - @自定义  查询读取权限
   	-->
   	<!--
    select count(*) from sys_entity_read_permission
	where entity_id = #{entityId} and entity_type = #{entityType} and owner_type = #{ownerType} and  (${column}&amp;#{intValue}) > 0 
	-->
	select count(*) from sys_entity_read_permission 
    where entity_id = #{entityId} and entity_type = #{entityType} and owner_type = #{ownerType} and user_id = #{userId}
  </select>
  
  <update id="updateReadAthority" parameterType="java.util.Map">
    <!--
      WARNING - @自定义  更新读权限
    -->
    update sys_entity_read_permission set ${column} = #{intValue} 
    where 
    entity_type = #{entityType} and owner_type = #{ownerType} and entity_id = #{entityId} and user_id = #{userId}
  </update>
  
  <update id="updateReadPermission" parameterType="com.kingnod.etraining.security.entity.EntityReadPermission">
    <!-- WARNING - @自定义  更新读权限  -->
    update sys_entity_read_permission set owner_type = #{ownerType,jdbcType=CHAR},owner_0 = #{owner0,jdbcType=DECIMAL},user_id = #{userId,jdbcType=DECIMAL},
    owner_1 = #{owner1,jdbcType=DECIMAL},owner_2 = #{owner2,jdbcType=DECIMAL},owner_3 = #{owner3,jdbcType=DECIMAL},owner_4 = #{owner4,jdbcType=DECIMAL},
    owner_5 = #{owner5,jdbcType=DECIMAL},owner_6 = #{owner6,jdbcType=DECIMAL},owner_7 = #{owner7,jdbcType=DECIMAL},owner_8 = #{owner8,jdbcType=DECIMAL},
    owner_9 = #{owner9,jdbcType=DECIMAL} where entity_id = #{entityId,jdbcType=DECIMAL} and entity_type = #{entityType,jdbcType=VARCHAR} 
  </update>
  
  <insert id="saveReadPermission" parameterType="com.kingnod.etraining.security.entity.EntityReadPermission">
    <!-- WARNING - @自定义  新增读权限  -->
    insert into sys_entity_read_permission values (#{entityId,jdbcType=DECIMAL},#{entityType,jdbcType=VARCHAR},#{ownerType,jdbcType=CHAR},
    #{owner0,jdbcType=DECIMAL},#{userId,jdbcType=DECIMAL},#{owner1,jdbcType=DECIMAL},#{owner2,jdbcType=DECIMAL},#{owner3,jdbcType=DECIMAL},
    #{owner4,jdbcType=DECIMAL},#{owner5,jdbcType=DECIMAL},#{owner6,jdbcType=DECIMAL},#{owner7,jdbcType=DECIMAL},#{owner8,jdbcType=DECIMAL},
    #{owner9,jdbcType=DECIMAL},#{owner10,jdbcType=DECIMAL},#{owner11,jdbcType=DECIMAL},#{owner12,jdbcType=DECIMAL}) 
  </insert>
  
  <update id="saveReadAthority" parameterType="java.util.Map">
    <!--
      WARNING - @自定义  保存读权限
    -->
    insert into sys_entity_read_permission values (#{entityId},#{entityType},#{ownerType},null,${userId},null,null,null,null,null,null,null,null,null,null,null,null)
  </update>
  <sql id="leftJoinReadPermission">
  	<!--
      WARNING - @自定义  连接读取权限表
    -->
    <if test="params != null">
    <if test="params.userPermission != null">
  	left join SYS_ENTITY_READ_PERMISSION B on A.ID = B.ENTITY_ID 
  	  <if test="params.entityTypes != null">
  	  AND (
  	    <trim prefixOverrides="OR">
          <foreach collection="params.entityTypes.conditions" item="entityType">
            ${entityType.expression} '${entityType.value}' 
          </foreach>
        </trim>
  	  )
  	  </if>
  	</if>
  	</if>
  </sql>
  <sql id="whereReadPermission">
  	<!--
      WARNING - @自定义  读取权限过滤
    -->
    <if test="params != null">
    <if test="params.userPermission != null">
    AND (
    <trim prefixOverrides="OR">
  	<if test="params.groupPermission != null">
       OR
      <foreach collection="params.groupPermission.conditions" open="(" close=")" item="perCnd">
      <if test="perCnd.group">
      	  ${perCnd.logic} 
          <foreach close=")" collection="perCnd.all" item="perCndNest" open="(">
          <choose>
            <when test="perCndNest.bitOperation">
              ${perCndNest.logic}
            	<if test="perCndNest.operator.bitAnd">  (${perCndNest.name}&amp;${perCndNest.value})>0 </if>
            	<if test="perCndNest.operator.bitOr" >  (${perCndNest.name}|${perCndNest.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
          </foreach>
      </if>
      <if test="perCnd.group == false">
          <choose>
            <when test="perCnd.bitOperation">
              ${perCnd.logic}
            	<if test="perCnd.operator.bitAnd">  (${perCnd.name}&amp;${perCnd.value})>0 </if>
            	<if test="perCnd.operator.bitOr" >  (${perCnd.name}|${perCnd.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
      </if>        
      </foreach>
    </if>
    <if test="params.rolePermission != null">
      OR
      <foreach collection="params.rolePermission.conditions" open="(" close=")" item="perCnd">
      <if test="perCnd.group">
      	  ${perCnd.logic} 
          <foreach close=")" collection="perCnd.all" item="perCndNest" open="(">
          <choose>
            <when test="perCndNest.bitOperation">
              ${perCndNest.logic}
            	<if test="perCndNest.operator.bitAnd">  (${perCndNest.name}&amp;${perCndNest.value})>0 </if>
            	<if test="perCndNest.operator.bitOr" >  (${perCndNest.name}|${perCndNest.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
          </foreach>
      </if>
      <if test="perCnd.group == false">
          <choose>
            <when test="perCnd.bitOperation">
              ${perCnd.logic}
            	<if test="perCnd.operator.bitAnd">  (${perCnd.name}&amp;${perCnd.value})>0 </if>
            	<if test="perCnd.operator.bitOr" >  (${perCnd.name}|${perCnd.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
        </if>
      </foreach>
      </if>
      <if test="params.userPermission != null">
      OR
      <foreach collection="params.userPermission.conditions" open="(" close=")" item="perCnd">       
      <if test="perCnd.group == false">
          ${perCnd.expression} #{perCnd.value}
      </if>
      </foreach>
     </if> 
     )
     </trim>
     </if>
     </if>
  </sql>
  <sql id="findByCriteria">
  	<!--
      WARNING - @自定义  读取权限过滤
    -->
    select Z.ENTITY_ID 
    from SYS_ENTITY_READ_PERMISSION Z 
    where 
    <if test="params != null">
    <if test="params.userPermission != null">
     (
    <trim prefixOverrides="OR">
  	<if test="params.groupPermission != null">
       OR
      <foreach collection="params.groupPermission.conditions" open="(" close=")" item="perCnd">
      <if test="perCnd.group">
      	  ${perCnd.logic} 
          <foreach close=")" collection="perCnd.all" item="perCndNest" open="(">
          <choose>
            <when test="perCndNest.bitOperation">
              ${perCndNest.logic}
            	<if test="perCndNest.operator.bitAnd">  (${perCndNest.name}&amp;${perCndNest.value})>0 </if>
            	<if test="perCndNest.operator.bitOr" >  (${perCndNest.name}|${perCndNest.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
          </foreach>
      </if>
      <if test="perCnd.group == false">
          <choose>
            <when test="perCnd.bitOperation">
              ${perCnd.logic}
            	<if test="perCnd.operator.bitAnd">  (${perCnd.name}&amp;${perCnd.value})>0 </if>
            	<if test="perCnd.operator.bitOr" >  (${perCnd.name}|${perCnd.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
      </if>        
      </foreach>
    </if>
    <if test="params.rolePermission != null">
      OR
      <foreach collection="params.rolePermission.conditions" open="(" close=")" item="perCnd">
      <if test="perCnd.group">
      	  ${perCnd.logic} 
          <foreach close=")" collection="perCnd.all" item="perCndNest" open="(">
          <choose>
            <when test="perCndNest.bitOperation">
              ${perCndNest.logic}
            	<if test="perCndNest.operator.bitAnd">  (${perCndNest.name}&amp;${perCndNest.value})>0 </if>
            	<if test="perCndNest.operator.bitOr" >  (${perCndNest.name}|${perCndNest.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
          </foreach>
      </if>
      <if test="perCnd.group == false">
          <choose>
            <when test="perCnd.bitOperation">
              ${perCnd.logic}
            	<if test="perCnd.operator.bitAnd">  (${perCnd.name}&amp;${perCnd.value})>0 </if>
            	<if test="perCnd.operator.bitOr" >  (${perCnd.name}|${perCnd.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
        </if>
      </foreach>
      </if>
      <if test="params.userPermission != null">
      OR
      <foreach collection="params.userPermission.conditions" open="(" close=")" item="perCnd">       
      <if test="perCnd.group == false">
          ${perCnd.expression} #{perCnd.value}
      </if>
      </foreach>
     </if> 
     )
     <if test="params.entityTypes != null">
  	  AND (
  	    <trim prefixOverrides="OR">
          <foreach collection="params.entityTypes.conditions" item="entityType">
            ${entityType.expression} '${entityType.value}' 
          </foreach>
        </trim>
  	  )
  	  </if>
     </trim>
     </if>
     </if>
  </sql>
  <sql id="findAllByCriteria">
  	<!--
      WARNING - @自定义  读取权限过滤
    -->
    <if test="params != null">
    <if test="params.userPermission != null">
    <!-- inner join ( -->
    select distinct ${params.columnName} AS ENTITY_ID
    from SYS_ENTITY_READ_PERMISSION Z INNER JOIN ${params.hierarchyTableName} Y ON Z.ENTITY_ID = Y.HIERARCHY_ID
    where 
     (
    <trim prefixOverrides="OR">
  	<if test="params.groupPermission != null">
       OR
      <foreach collection="params.groupPermission.conditions" open="(" close=")" item="perCnd">
      <if test="perCnd.group">
      	  ${perCnd.logic} 
          <foreach close=")" collection="perCnd.all" item="perCndNest" open="(">
          <choose>
            <when test="perCndNest.bitOperation">
              ${perCndNest.logic}
            	<if test="perCndNest.operator.bitAnd">  (${perCndNest.name}&amp;${perCndNest.value})>0 </if>
            	<if test="perCndNest.operator.bitOr" >  (${perCndNest.name}|${perCndNest.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
          </foreach>
      </if>
      <if test="perCnd.group == false">
          <choose>
            <when test="perCnd.bitOperation">
              ${perCnd.logic}
            	<if test="perCnd.operator.bitAnd">  (${perCnd.name}&amp;${perCnd.value})>0 </if>
            	<if test="perCnd.operator.bitOr" >  (${perCnd.name}|${perCnd.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
      </if>        
      </foreach>
    </if>
    <if test="params.rolePermission != null">
      OR
      <foreach collection="params.rolePermission.conditions" open="(" close=")" item="perCnd">
      <if test="perCnd.group">
      	  ${perCnd.logic} 
          <foreach close=")" collection="perCnd.all" item="perCndNest" open="(">
          <choose>
            <when test="perCndNest.bitOperation">
              ${perCndNest.logic}
            	<if test="perCndNest.operator.bitAnd">  (${perCndNest.name}&amp;${perCndNest.value})>0 </if>
            	<if test="perCndNest.operator.bitOr" >  (${perCndNest.name}|${perCndNest.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
          </foreach>
      </if>
      <if test="perCnd.group == false">
          <choose>
            <when test="perCnd.bitOperation">
              ${perCnd.logic}
            	<if test="perCnd.operator.bitAnd">  (${perCnd.name}&amp;${perCnd.value})>0 </if>
            	<if test="perCnd.operator.bitOr" >  (${perCnd.name}|${perCnd.value})>0 </if>
            </when>
            <otherwise>
               ${perCnd.expression} #{perCnd.value} 
            </otherwise>
          </choose>
        </if>
      </foreach>
      </if>
      <if test="params.userPermission != null">
      OR
      <foreach collection="params.userPermission.conditions" open="(" close=")" item="perCnd">       
      <if test="perCnd.group == false">
          ${perCnd.expression} #{perCnd.value}
      </if>
      </foreach>
     </if> 
     )
     <if test="params.entityTypes != null">
  	  AND (
  	    <trim prefixOverrides="OR">
          <foreach collection="params.entityTypes.conditions" item="entityType">
            ${entityType.expression} '${entityType.value}' 
          </foreach>
        </trim>
  	  )
  	  </if>
     </trim>
     <!-- ) B on A.ID = B.ENTITY_ID -->
     </if>
     </if>
  </sql>
</mapper>