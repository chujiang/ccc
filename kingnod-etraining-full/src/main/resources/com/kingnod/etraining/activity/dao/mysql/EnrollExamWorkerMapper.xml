<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EnrollExamWorker">
  <resultMap id="BaseResultMap" type="com.kingnod.etraining.activity.entity.EnrollExamWorker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    <id column="A_ID" jdbcType="DECIMAL" property="id" />
    <result column="A_ACTIVITY_ID" jdbcType="DECIMAL" property="activityId" />
    <result column="A_USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="A_RECORD_STATUS" jdbcType="CHAR" property="recordStatus" />
    <result column="A_UPDATE_COUNT" jdbcType="DECIMAL" property="updateCount" />
    <result column="A_CREATOR_ID" jdbcType="DECIMAL" property="creatorId" />
    <result column="A_CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="A_UPDATER_ID" jdbcType="DECIMAL" property="updaterId" />
    <result column="A_UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="A_WORK_TYPE" jdbcType="CHAR" property="workType" />
    <result column="A_QUESTION_ID" jdbcType="DECIMAL" property="questionId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    A.ID as A_ID, A.ACTIVITY_ID as A_ACTIVITY_ID, A.USER_ID as A_USER_ID, A.RECORD_STATUS as A_RECORD_STATUS, 
    A.UPDATE_COUNT as A_UPDATE_COUNT, A.CREATOR_ID as A_CREATOR_ID, A.CREATE_DATE as A_CREATE_DATE, 
    A.UPDATER_ID as A_UPDATER_ID, A.UPDATE_DATE as A_UPDATE_DATE, A.WORK_TYPE as A_WORK_TYPE, QUESTION_ID as A_QUESTION_ID
  </sql>
  <select id="findByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    select
    <include refid="Base_Column_List" />
     from ATY_ENROLL_EXAM_WORKER A
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
    <if test="hasOrderBy">
      order by
      <foreach collection="orderBys" item="orderBy" separator=",">
        ${orderBy}
      </foreach>
    </if>
  </select>
  <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    select 
    <include refid="Base_Column_List" />
    from ATY_ENROLL_EXAM_WORKER A
    where A.ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    delete from ATY_ENROLL_EXAM_WORKER
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.kingnod.core.criteria.Criteria">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    delete from ATY_ENROLL_EXAM_WORKER A
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
  </delete>
  <insert id="insert" parameterType="com.kingnod.etraining.activity.entity.EnrollExamWorker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select ATY_ENROLL_EXAM_WORKER_SEQ.nextval from dual
    </selectKey>
    insert into ATY_ENROLL_EXAM_WORKER (ID, ACTIVITY_ID, USER_ID, 
      RECORD_STATUS, UPDATE_COUNT, CREATOR_ID, 
      CREATE_DATE, UPDATER_ID, UPDATE_DATE, 
      WORK_TYPE,QUESTION_ID)
    values (#{id,jdbcType=DECIMAL}, #{activityId,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, 
      #{recordStatus,jdbcType=CHAR}, #{updateCount,jdbcType=DECIMAL}, #{creatorId,jdbcType=DECIMAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=DECIMAL}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{workType,jdbcType=CHAR}, #{questionId,jdbcType=DECIMAL})
  </insert>
  <select id="countByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
    -->
    select count(ID) from ATY_ENROLL_EXAM_WORKER A
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
  </select>
  <select id="countByExaminationId" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
    <!--
      WARNING - @自定义
    -->
     select count(a.examination_id) 

  from (select eeq.examination_id, eeq.question_id, count(*) read_count
          from EXM_EXAMINEE_QUESTION eeq
         where record_status = 'A'
           and STATUS = 'E'
           and QUESTION_TYPE in ('T', 'A', 'Z')
         group by examination_id, question_id) a,
       
       (select distinct tg.name, ae.id examination_id, qtg.question_id
          from exm_test_group          tg,
               exm_question_test_group qtg,
               aty_examination         ae
         where tg.id = qtg.test_group_id
           and ae.aty_paper_id = tg.exam_paper_id
           and ae.record_status = 'A') b,
       
       exm_question eq

	        where a.question_id = eq.id
   			and a.question_id = b.question_id
   			and b.examination_id=a.examination_id
   			and a.examination_id=#{params.examinationId}
  </select>
  <update id="updateByCriteria" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    update ATY_ENROLL_EXAM_WORKER A
    <set>
      <if test="record.id != null">
        A.ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.activityId != null">
        A.ACTIVITY_ID = #{record.activityId,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        A.USER_ID = #{record.userId,jdbcType=DECIMAL},
      </if>
      <if test="record.recordStatus != null">
        A.RECORD_STATUS = #{record.recordStatus,jdbcType=CHAR},
      </if>
      <if test="record.updateCount != null">
        A.UPDATE_COUNT = #{record.updateCount,jdbcType=DECIMAL},
      </if>
      <if test="record.creatorId != null">
        A.CREATOR_ID = #{record.creatorId,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null">
        A.CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updaterId != null">
        A.UPDATER_ID = #{record.updaterId,jdbcType=DECIMAL},
      </if>
      <if test="record.updateDate != null">
        A.UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workType != null">
        A.WORK_TYPE = #{record.workType,jdbcType=CHAR},
      </if>
      <if test="record.questionId != null">
        A.QUESTION_ID = #{record.questionId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <where><include refid="Global.Where_Clause" /></where>
    </if>
  </update>
  <update id="update" parameterType="com.kingnod.etraining.activity.entity.EnrollExamWorker">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-04-06 09:20.
    -->
    update ATY_ENROLL_EXAM_WORKER A
    <set>
      <if test="id != null">
        A.ID = #{id,jdbcType=DECIMAL},
      </if>
      <if test="activityId != null">
        A.ACTIVITY_ID = #{activityId,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        A.USER_ID = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="recordStatus != null">
        A.RECORD_STATUS = #{recordStatus,jdbcType=CHAR},
      </if>
      <if test="updateCount != null">
        A.UPDATE_COUNT = #{updateCount,jdbcType=DECIMAL},
      </if>
      <if test="creatorId != null">
        A.CREATOR_ID = #{creatorId,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        A.CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        A.UPDATER_ID = #{updaterId,jdbcType=DECIMAL},
      </if>
      <if test="updateDate != null">
        A.UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workType != null">
        A.WORK_TYPE = #{workType,jdbcType=CHAR},
      </if>
      <if test="questionId != null">
        A.QUESTION_ID = #{questionId,jdbcType=DECIMAL},
      </if>
    </set>
    where A.ID = #{id,jdbcType=DECIMAL}
  </update>
  
  <select id="findByExaminationId" parameterType="com.kingnod.core.criteria.Criteria" resultType="com.kingnod.etraining.activity.entity.EnrollExamWorker">
    <!--
      WARNING - @查询每道题目对应的阅卷人和审核人
    -->
    select a.examination_id 	examinationId,
       a.question_id			questionId,
       a.read_count				canReadCount,
       eq.content				questionContent,
       eq.type					questionType,
       b.name					testGroupName

  from (select eeq.examination_id, eeq.question_id, count(*) read_count
          from EXM_EXAMINEE_QUESTION eeq
         where record_status = 'A'
           and STATUS = 'E'
           and QUESTION_TYPE in ('T', 'A', 'Z')
         group by examination_id, question_id) a,
       
       (select distinct tg.name, tg.id testGroupId, ae.id examination_id, qtg.question_id
          from exm_test_group          tg,
               exm_question_test_group qtg,
               aty_examination         ae
         where tg.id = qtg.test_group_id
           and ae.aty_paper_id = tg.exam_paper_id
           and ae.record_status = 'A') b,
       
       exm_question eq

	<if test="_parameter != null">
      <where><include refid="Global.Where_Clause" />
      		and a.question_id = eq.id
   			and a.question_id = b.question_id
   			and b.examination_id=a.examination_id
   			and a.examination_id=#{params.examinationId}
   			<if test="params.markers != null">
        		and a.question_id in (select question_id
                           from aty_enroll_exam_worker
                          where activity_id=#{params.examinationId}
                            and user_id = #{params.markers})
      		</if>
   			<if test="params.auditors != null">
        		and a.question_id in (select question_id
                           from aty_enroll_exam_worker
                          where activity_id =#{params.examinationId}
                            and user_id = #{params.auditors})
      		</if>
      </where>
    </if>
    <if test="hasOrderBy">
      order by
      <foreach collection="orderBys" item="orderBy" separator=",">
        ${orderBy}
      </foreach>
    </if>
  </select>
  
</mapper>