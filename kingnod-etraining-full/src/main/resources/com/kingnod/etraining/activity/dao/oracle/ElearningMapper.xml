<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Elearning">
	<resultMap id="BaseResultMap" type="com.kingnod.etraining.activity.entity.Elearning">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		<id column="A_ID" jdbcType="DECIMAL" property="id" />
		<result column="A_FOLDER_ID" jdbcType="DECIMAL" property="folderId" />
		<result column="A_COURSE_ID" jdbcType="DECIMAL" property="courseId" />
		<result column="A_NAME" jdbcType="VARCHAR" property="name" />
		<result column="A_TRAINER" jdbcType="DECIMAL" property="trainer" />
		<result column="A_LESSONS" jdbcType="DECIMAL" property="lessons" />
		<result column="A_CREDIT" jdbcType="DECIMAL" property="credit" />
		<result column="A_FINISH_TIME" jdbcType="TIMESTAMP" property="finishTime" />
		<result column="A_START_ENROLL_TIME" jdbcType="TIMESTAMP" property="startEnrollTime" />
		<result column="A_END_ENROLL_TIME" jdbcType="TIMESTAMP" property="endEnrollTime" />
		<result column="A_MIN_ENROLL_NUMBER" jdbcType="DECIMAL" property="minEnrollNumber" />
		<result column="A_MAX_ENROLL_NUMBER" jdbcType="DECIMAL" property="maxEnrollNumber" />
		<result column="A_ENABLED_WAITING" jdbcType="CHAR" property="enabledWaiting" />
		<result column="A_ALLOW_LOGOUT" jdbcType="CHAR" property="allowLogout" />
		<result column="A_COURSE_TYPE_ID" jdbcType="DECIMAL" property="courseTypeId" />
		<result column="A_RELEASE_STAUTS" jdbcType="CHAR" property="releaseStauts" />
		<result column="A_RECORD_STATUS" jdbcType="CHAR" property="recordStatus" />
		<result column="A_UPDATE_COUNT" jdbcType="DECIMAL" property="updateCount" />
		<result column="A_CREATOR_ID" jdbcType="DECIMAL" property="creatorId" />
		<result column="A_CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
		<result column="A_UPDATER_ID" jdbcType="DECIMAL" property="updaterId" />
		<result column="A_UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
		<result column="A_RELEASE_DATE" jdbcType="TIMESTAMP" property="releaseDate" />
		<result column="TRAINER_NAME" jdbcType="VARCHAR" property="trainerName" />
		<result column="COURSE_TITLE" jdbcType="VARCHAR" property="courseName" />
		<result column="FORDER_NAME" jdbcType="VARCHAR" property="folderName" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		A.ID as A_ID, A.FOLDER_ID as A_FOLDER_ID, A.COURSE_ID as A_COURSE_ID, A.NAME as A_NAME,
		A.TRAINER as A_TRAINER, A.LESSONS as A_LESSONS, A.CREDIT as A_CREDIT, A.FINISH_TIME as A_FINISH_TIME,
		A.START_ENROLL_TIME as A_START_ENROLL_TIME, A.END_ENROLL_TIME as A_END_ENROLL_TIME,
		A.MIN_ENROLL_NUMBER as A_MIN_ENROLL_NUMBER, A.MAX_ENROLL_NUMBER as A_MAX_ENROLL_NUMBER,
		A.ENABLED_WAITING as A_ENABLED_WAITING, A.ALLOW_LOGOUT as A_ALLOW_LOGOUT, A.COURSE_TYPE_ID as A_COURSE_TYPE_ID,
		A.RELEASE_STAUTS as A_RELEASE_STAUTS, A.RECORD_STATUS as A_RECORD_STATUS, A.UPDATE_COUNT as A_UPDATE_COUNT,
		A.CREATOR_ID as A_CREATOR_ID, A.CREATE_DATE as A_CREATE_DATE, A.UPDATER_ID as A_UPDATER_ID,
		A.UPDATE_DATE as A_UPDATE_DATE, A.RELEASE_DATE as A_RELEASE_DATE
	</sql>
	<delete id="deleteById" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		delete from ATY_ELEARNING
		where ID = #{id,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByCriteria" parameterType="com.kingnod.core.criteria.Criteria">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		delete from ATY_ELEARNING A
		<if test="_parameter != null">
			<where>
				<include refid="Global.Where_Clause" />
			</where>
		</if>
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
	</delete>
	<insert id="insert" parameterType="com.kingnod.etraining.activity.entity.Elearning">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
			select ATY_ELEARNING_SEQ.nextval from dual
    </selectKey>
		insert into ATY_ELEARNING (ID, FOLDER_ID, COURSE_ID,
		NAME, TRAINER, LESSONS,
		CREDIT, FINISH_TIME, START_ENROLL_TIME,
		END_ENROLL_TIME, MIN_ENROLL_NUMBER, MAX_ENROLL_NUMBER,
		ENABLED_WAITING, ALLOW_LOGOUT, COURSE_TYPE_ID,
		RELEASE_STAUTS, RECORD_STATUS, UPDATE_COUNT,
		CREATOR_ID, CREATE_DATE, UPDATER_ID,
		UPDATE_DATE, RELEASE_DATE)
		values (#{id,jdbcType=DECIMAL}, #{folderId,jdbcType=DECIMAL}, #{courseId,jdbcType=DECIMAL},
		#{name,jdbcType=VARCHAR}, #{trainer,jdbcType=DECIMAL}, #{lessons,jdbcType=DECIMAL},
		#{credit,jdbcType=DECIMAL}, #{finishTime,jdbcType=TIMESTAMP}, #{startEnrollTime,jdbcType=TIMESTAMP},
		#{endEnrollTime,jdbcType=TIMESTAMP}, #{minEnrollNumber,jdbcType=DECIMAL}, #{maxEnrollNumber,jdbcType=DECIMAL},
		#{enabledWaiting,jdbcType=CHAR}, #{allowLogout,jdbcType=CHAR}, #{courseTypeId,jdbcType=DECIMAL},
		#{releaseStauts,jdbcType=CHAR}, #{recordStatus,jdbcType=CHAR}, #{updateCount,jdbcType=DECIMAL},
		#{creatorId,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=DECIMAL},
		#{updateDate,jdbcType=TIMESTAMP}, #{releaseDate,jdbcType=TIMESTAMP})
	</insert>
	<update id="updateByCriteria" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		update ATY_ELEARNING A
		<set>
			<if test="record.id != null">
				A.ID = #{record.id,jdbcType=DECIMAL},
      </if>
			<if test="record.folderId != null">
				A.FOLDER_ID = #{record.folderId,jdbcType=DECIMAL},
      </if>
			<if test="record.courseId != null">
				A.COURSE_ID = #{record.courseId,jdbcType=DECIMAL},
      </if>
			<if test="record.name != null">
				A.NAME = #{record.name,jdbcType=VARCHAR},
      </if>
			<if test="record.trainer != null">
				A.TRAINER = #{record.trainer,jdbcType=DECIMAL},
      </if>
			<if test="record.lessons != null">
				A.LESSONS = #{record.lessons,jdbcType=DECIMAL},
      </if>
			<if test="record.credit != null">
				A.CREDIT = #{record.credit,jdbcType=DECIMAL},
      </if>
			<if test="record.finishTime != null">
				A.FINISH_TIME = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.startEnrollTime != null">
				A.START_ENROLL_TIME = #{record.startEnrollTime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.endEnrollTime != null">
				A.END_ENROLL_TIME = #{record.endEnrollTime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.minEnrollNumber != null">
				A.MIN_ENROLL_NUMBER = #{record.minEnrollNumber,jdbcType=DECIMAL},
      </if>
			<if test="record.maxEnrollNumber != null">
				A.MAX_ENROLL_NUMBER = #{record.maxEnrollNumber,jdbcType=DECIMAL},
      </if>
			<if test="record.enabledWaiting != null">
				A.ENABLED_WAITING = #{record.enabledWaiting,jdbcType=CHAR},
      </if>
			<if test="record.allowLogout != null">
				A.ALLOW_LOGOUT = #{record.allowLogout,jdbcType=CHAR},
      </if>
			<if test="record.courseTypeId != null">
				A.COURSE_TYPE_ID = #{record.courseTypeId,jdbcType=DECIMAL},
      </if>
			<if test="record.releaseStauts != null">
				A.RELEASE_STAUTS = #{record.releaseStauts,jdbcType=CHAR},
      </if>
			<if test="record.recordStatus != null">
				A.RECORD_STATUS = #{record.recordStatus,jdbcType=CHAR},
      </if>
			<if test="record.updateCount != null">
				A.UPDATE_COUNT = #{record.updateCount,jdbcType=DECIMAL},
      </if>
			<if test="record.creatorId != null">
				A.CREATOR_ID = #{record.creatorId,jdbcType=DECIMAL},
      </if>
			<if test="record.createDate != null">
				A.CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
			<if test="record.updaterId != null">
				A.UPDATER_ID = #{record.updaterId,jdbcType=DECIMAL},
      </if>
			<if test="record.updateDate != null">
				A.UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
			<if test="record.releaseDate != null">
				A.RELEASE_DATE = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
		</set>
		<if test="_parameter != null">
			<where>
				<include refid="Global.Where_Clause" />
			</where>
		</if>
	</update>
	<update id="update" parameterType="com.kingnod.etraining.activity.entity.Elearning">
		<!-- WARNING - @mbggenerated This element is automatically generated by MyBatis Generator, do not modify. This element was generated on 2012-05-08 16:44. -->
		update ATY_ELEARNING A
		<set>
			<if test="id != null">
				A.ID = #{id,jdbcType=DECIMAL},
      </if>
			<if test="folderId != null">
				A.FOLDER_ID = #{folderId,jdbcType=DECIMAL},
      </if>
			<if test="courseId != null">
				A.COURSE_ID = #{courseId,jdbcType=DECIMAL},
      </if>
			<if test="name != null">
				A.NAME = #{name,jdbcType=VARCHAR},
      </if>
			<if test="trainer != null">
				A.TRAINER = #{trainer,jdbcType=DECIMAL},
      </if>
			<if test="lessons != null">
				A.LESSONS = #{lessons,jdbcType=DECIMAL},
      </if>
			<if test="credit != null">
				A.CREDIT = #{credit,jdbcType=DECIMAL},
      </if>
			<if test="finishTime != null">
				A.FINISH_TIME = #{finishTime,jdbcType=TIMESTAMP},
      </if>
			<if test="startEnrollTime != null">
				A.START_ENROLL_TIME = #{startEnrollTime,jdbcType=TIMESTAMP},
      </if>
			<if test="endEnrollTime != null">
				A.END_ENROLL_TIME = #{endEnrollTime,jdbcType=TIMESTAMP},
      </if>
			<if test="minEnrollNumber != null">
				A.MIN_ENROLL_NUMBER = #{minEnrollNumber,jdbcType=DECIMAL},
      </if>
			<if test="maxEnrollNumber != null">
				A.MAX_ENROLL_NUMBER = #{maxEnrollNumber,jdbcType=DECIMAL},
      </if>
			<if test="enabledWaiting != null">
				A.ENABLED_WAITING = #{enabledWaiting,jdbcType=CHAR},
      </if>
			<if test="allowLogout != null">
				A.ALLOW_LOGOUT = #{allowLogout,jdbcType=CHAR},
      </if>
			<if test="courseTypeId != null">
				A.COURSE_TYPE_ID = #{courseTypeId,jdbcType=DECIMAL},
      </if>
			<if test="releaseStauts != null">
				A.RELEASE_STAUTS = #{releaseStauts,jdbcType=CHAR},
      </if>
			<if test="recordStatus != null">
				A.RECORD_STATUS = #{recordStatus,jdbcType=CHAR},
      </if>
			<if test="updateCount != null">
				A.UPDATE_COUNT = #{updateCount,jdbcType=DECIMAL},
      </if>
			<if test="creatorId != null">
				A.CREATOR_ID = #{creatorId,jdbcType=DECIMAL},
      </if>
			<if test="createDate != null">
				A.CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
			<if test="updaterId != null">
				A.UPDATER_ID = #{updaterId,jdbcType=DECIMAL},
      </if>
			<if test="updateDate != null">
				A.UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
			<if test="releaseDate != null">
				A.RELEASE_DATE = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
		</set>
		where A.ID = #{id,jdbcType=DECIMAL}
	</update>
	<select id="countByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
		<!-- WARNING - @自定义 -->
		select count(A.ID)
		from ATY_ELEARNING A LEFT JOIN RES_TRAINER B ON A.TRAINER = B.ID LEFT JOIN ATY_FOLDER C ON A.FOLDER_ID = C.ID LEFT JOIN CRS_COURSE_INFO D ON A.COURSE_ID = D.ID
		<if test="params.folderId != null">
			inner join ATY_FOLDER_HIERARCHY M on A.FOLDER_ID = M.FOLDER_ID and M.HIERARCHY_ID = #{params.folderId,jdbcType=DECIMAL} and M.RECORD_STATUS = 'A'
     </if>
		<if test="_parameter != null">
			<where>
				<include refid="Global.Where_Clause" />
			</where>
		</if>

	</select>

	<select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		<!-- WARNING - @自定义 -->
		select
		<include refid="Base_Column_List" />
		, B.NAME AS TRAINER_NAME ,C.NAME AS FOLDER_NAME , D.COURSE_TITLE AS COURSE_TITLE
		from ATY_ELEARNING A LEFT JOIN RES_TRAINER B ON A.TRAINER = B.ID LEFT JOIN ATY_FOLDER C ON A.FOLDER_ID = C.ID LEFT JOIN CRS_COURSE_INFO D ON A.COURSE_ID = D.ID
		where A.ID = #{id,jdbcType=DECIMAL}
	</select>
	<select id="findByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultMap="BaseResultMap">
		<!-- WARNING - @自定义 -->
		select
		<include refid="Base_Column_List" />
		, B.NAME AS TRAINER_NAME ,C.NAME AS FOLDER_NAME , D.COURSE_TITLE AS COURSE_TITLE
		from ATY_ELEARNING A LEFT JOIN RES_TRAINER B ON A.TRAINER = B.ID LEFT JOIN ATY_FOLDER C ON A.FOLDER_ID = C.ID LEFT JOIN CRS_COURSE_INFO D ON A.COURSE_ID = D.ID
		<if test="params.folderId != null">
			inner join ATY_FOLDER_HIERARCHY M on A.FOLDER_ID = M.FOLDER_ID and M.HIERARCHY_ID = #{params.folderId,jdbcType=DECIMAL} and M.RECORD_STATUS = 'A'
     </if>
		<if test="_parameter != null">
			<where>
				<include refid="Global.Where_Clause" />
			</where>
		</if>
		<if test="hasOrderBy">
			order by
			<foreach collection="orderBys" item="orderBy" separator=",">
				${orderBy}
      </foreach>
		</if>
	</select>
	<resultMap id="ElearningSituationResultMap" type="com.kingnod.etraining.activity.entity.ElearningSituation">
		<!-- WARNING - @自定义 -->
		<result column="A_ID" jdbcType="DECIMAL" property="id" />
		<result column="A_ACTIVITY_ID" jdbcType="DECIMAL" property="activityId" />
		<result column="A_NAME" jdbcType="VARCHAR" property="name" />
		<result column="FULL_NAME" jdbcType="VARCHAR" property="fullName" />
		<result column="B_USER_ID" jdbcType="DECIMAL" property="userId" />
		<result column="STATUS" jdbcType="CHAR" property="status" />
		<result column="COMPLETED_DATE" jdbcType="TIMESTAMP" property="completedDate" />
		<result column="SCORE" jdbcType="DECIMAL" property="score" />
		<result column="TOTAL_TIME" jdbcType="DECIMAL" property="totalTime" />
		<result column="UPDATER_ID" jdbcType="DECIMAL" property="updaterId" />
		<result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updaterDate" />
		<result column="COMMENTS" jdbcType="VARCHAR" property="comments" />
	</resultMap>
	<sql id="Criteria_Enroll_Where_Clause">
    <!--
      WARNING - @为findByCriteria服务的SQL
    -->
      <if test="@com.kingnod.core.util.collection.ListUtils@isNotEmpty(conditions)">
      <foreach open="(" close=")" collection="conditions" item="condition">
        <if test="condition.group">
           ${condition.logic} 
          <foreach close=")" collection="condition.all" item="criterion" open="(">
            <choose>
              <when test="criterion.between">
                 ${criterion.expression} #{criterion.value.start} and #{criterion.value.end} 
              </when>
              <when test="criterion.list">
                 ${criterion.expression} 
                <foreach close=")" collection="criterion.value" item="inItem" open="(" separator=",">
                  #{inItem}
                </foreach>
              </when>
              <when test="criterion.none">

                 ${criterion.expression} 
                
              </when>
              <otherwise>
              	<choose>
               <when test="@com.kingnod.core.util.StringUtils@equals(criterion.name.trim(), 'E.NAME')">
            		${criterion.logic} D.ORGANIZATION_ID IN (
                 SELECT ORGANIZATION_ID FROM ORG_ORGANIZATION_HIERARCHY B  WHERE B.HIERARCHY_ID IN (SELECT ID FROM ORG_ORGANIZATION WHERE NAME LIKE #{criterion.value} escape '\') )  
             	</when>
            	<otherwise>
               	${criterion.expression} #{criterion.value} 
               </otherwise>
               </choose>
              </otherwise>
            </choose>
          </foreach>
        </if>
        <if test="condition.group == false">
          <choose>
            <when test="condition.between">
              ${condition.expression} #{condition.value.start} and #{condition.value.end}
            </when>
            <when test="condition.list">
              ${condition.expression}
              <foreach close=")" collection="condition.value" item="inItem" open="(" separator=",">
                #{inItem}
              </foreach>
            </when>
            <when test="condition.none">
              ${condition.expression} 
            </when>
            <otherwise>
            	<if test="condition.name == 'E.NAME' ">
            		or 1 = 1
             	</if>
            	<if test="condition.name != 'E.NAME'">
               ${condition.expression} #{condition.value} 
                </if>
                
            </otherwise>
          </choose>
        </if>
      </foreach>
      </if>
      <if test="params != null">
      	<if test="params.recordStatus != null">
      		AND A.RECORD_STATUS = #{params.recordStatus,jdbcType=CHAR}
      	</if>
      </if>
  </sql>
	
	
	<select id="countBySituation" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
		<!-- WARNING - @学习情况数量 -->
		SELECT count(A.ACTIVITY_ID)
		from ATY_ACTIVITY A,ATY_ENROLL_LEARNER B,ATY_USER_ACTIVITY C,ORG_USER D,ORG_ORGANIZATION E
		<if test="_parameter != null">
			<where>
				<include refid="Criteria_Enroll_Where_Clause" />
				<if test="params.activityId != null">
					 and A.ACTIVITY_ID=B.ACTIVITY_ID AND A.ACTIVITY_ID=#{params.activityId} AND B.RECORD_STATUS='A'AND D.ID=B.USER_ID
					  AND C.USER_ID(+)=B.USER_ID AND C.ACTIVITY_ID(+)=B.ACTIVITY_ID  AND E.ID(+)=D.ORGANIZATION_ID AND E.RECORD_STATUS = 'A' AND D.RECORD_STATUS='A'
      			</if>
      			<if test="params.userId">
      				AND B.USER_ID=#{params.userId}
      			</if>
<!--       			<include refid="Global.Where_Clause" /> -->
			</where>
		</if>
	</select>
	<select id="findBySituation" parameterType="com.kingnod.core.criteria.Criteria" resultMap="ElearningSituationResultMap">
		<!-- WARNING - @学习情况 -->
		SELECT
		A.ACTIVITY_ID AS ACTIVITY_ID,B.USER_ID AS USER_ID,A.NAME AS NAME,D.FULL_NAME AS FULL_NAME,D.LOGIN_NAME AS LOGIN_NAME,E.NAME AS E_NAME,D.ORGANIZATION_ID AS ORGANIZATION_ID, 
		C.ID AS A_ID,
		C.STATUS AS STATUS,
		C.COMPLETED_DATE AS COMPLETED_DATE,
		C.SCORE AS SCORE,
		C.TOTAL_TIME AS TOTAL_TIME,
		C.UPDATER_ID AS UPDATER_ID,
        C.UPDATE_DATE AS UPDATE_DATE,
        C.COMMENTS AS COMMENTS
		from ATY_ACTIVITY A,ATY_ENROLL_LEARNER B,ATY_USER_ACTIVITY C,ORG_USER D,ORG_ORGANIZATION E
		<if test="_parameter != null">
			<where>
				<include refid="Criteria_Enroll_Where_Clause" />
				<if test="params.activityId != null">
					and A.ACTIVITY_ID=B.ACTIVITY_ID AND A.ACTIVITY_ID=#{params.activityId} AND B.RECORD_STATUS='A'AND D.ID=B.USER_ID
					  AND C.USER_ID(+)=B.USER_ID AND C.ACTIVITY_ID(+)=B.ACTIVITY_ID  AND E.ID(+)=D.ORGANIZATION_ID AND E.RECORD_STATUS = 'A' AND D.RECORD_STATUS='A'
      			</if>
      			<if test="params.userId">
      				AND B.USER_ID=#{params.userId}
      			</if>
			</where>
		</if>
		<if test="hasOrderBy">
			order by
			<foreach collection="orderBys" item="orderBy" separator=",">
				${orderBy}
      </foreach>
		</if>
	</select>
</mapper>