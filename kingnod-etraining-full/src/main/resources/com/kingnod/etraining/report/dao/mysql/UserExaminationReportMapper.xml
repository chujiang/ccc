<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserExaminationReport">
  <resultMap id="BaseResultMap" type="com.kingnod.etraining.report.entity.UserExaminationReport">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-05-22 15:05.
    -->
    <id column="A_ID" jdbcType="DECIMAL" property="id" />
    <result column="A_EXAM_ID" jdbcType="DECIMAL" property="examId" />
    <result column="A_EXAM_NAME" jdbcType="VARCHAR" property="examName" />
    <result column="A_EXAM_TYPE" jdbcType="VARCHAR" property="examType" />
    <result column="A_USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="A_LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="A_FULL_NAME" jdbcType="VARCHAR" property="fullName" />
    <result column="A_ORG_NAME" jdbcType="VARCHAR" property="orgName" />
    <result column="A_USER_GROUP" jdbcType="VARCHAR" property="userGroup" />
    <result column="A_EXAM_SCORE" jdbcType="DECIMAL" property="examScore" />
    <result column="A_EXAM_STATUS" jdbcType="CHAR" property="examStatus" />
    <result column="A_EXAM_TIME" jdbcType="DECIMAL" property="examTime" />
    <result column="A_REEXAM_TIMES" jdbcType="DECIMAL" property="reexamTimes" />
    <result column="A_ANSWER_TIME_LENGTH" jdbcType="DECIMAL" property="answerTimeLength" />
    <result column="A_FINISH_DATE" jdbcType="TIMESTAMP" property="finishDate" />
  </resultMap>
  
  
  <sql id="Base_Column_List">
    <!-- WARNING - @mbggenerated -->
	   examination_id as A_EXAM_ID,
       exam_name as A_EXAM_NAME,
       '1' as A_EXAM_TYPE,
       user_id as A_USER_ID,
       login_name as A_LOGIN_NAME,
       full_name as A_FULL_NAME,
       org_name as A_ORG_NAME,
       org_id as A_ORG_ID,
       user_group as A_USER_GROUP,
       final_score as A_EXAM_SCORE,
       exam_status as A_EXAM_STATUS,
       exam_time as A_EXAM_TIME,
       reexam_times as A_REEXAM_TIMES,
       '' as A_ANSWER_TIME_LENGTH,
	   A_FINISH_DATE as A_FINISH_DATE
  </sql>
  
  
<sql id="Base_Table">

(
select a.*,
(select min(hs.end_time)
	    from aty_examinees_history hs
	   where hs.examination_id = a.examination_id
	     and hs.user_id = a.user_id
	     and hs.score > a.pass_score
	     and a.exam_status = 2) as A_FINISH_DATE
from 
  (
  select case
                 when a.final_score = -1 then
                  0
                 when a.final_score >= a.pass_score then
                  2
                 else
                  case
                 when a.exam_time = a.reexam_times then
                  -1
                 else
                  1
               end end exam_status,
               a.*
          from (select a.user_id user_id,
                       c.site_id,
          			   c.organization_id org_id,
                       b.examination_id examination_id,
                       b.examination_name exam_name,
                       b.paper_name paper_name,
                       c.full_name full_name,
                       c.login_name login_name,
                       b.paper_total_score paper_total_score,
                       a.examTime exam_time,
                       b.reexam_times reexam_times,
                       a.max_score,
                       a.avg_score,
                       a.last_score,
                       b.pass_score,
                       all_usergrop(c.id) user_group,
                       case
                         when b.scoring_type = 'A' then
                          a.avg_score
                         when b.scoring_type = 'H' then
                          to_number(a.max_score)
                         else
                          a.last_score
                       end final_score,
                       (select name
                          from org_organization
                         where id = c.organization_id) org_name
                
                  from (select ah.examination_id,
                               ah.user_id,
                               ah.examTime,
                               ah.max_score,
                               ah.sum_score / ah.examTime avg_score,
                               
                               (select totalScore
                                  from aty_examinees_history rowAH
                                 where rowAH.Examination_Id = ah.examination_id
                                   and rowAH.User_Id = ah.user_id
                                   and rowAH.Times = ah.examTime) last_score
                          from (select examination_id,
                                       user_id,
                                       count(*) examTime,
                                       max(totalScore) max_score,
                                       sum(totalScore) sum_score
                                  from aty_examinees_history
                                 group by examination_id, user_id) ah) a,
                       
                       (select a1.name examination_name,
                               a1.id examination_id,
                               a1.reexam_times,
                               a2.total_score paper_total_score,
                               a2.name paper_name,
                               nvl(a1.pass_score, 0) pass_score,
                               a1.scoring_type
                          from aty_examination a1
                          left join exm_exam_paper a2 on a1.aty_paper_id =
                                                         a2.id
                         where a1.record_status = 'A') b,
                       
                       org_user c
                
                 where a.examination_id = b.examination_id
                   and a.user_id = c.id
                
                union all
                
                select a.user_id user_id,
                       c.site_id,
          			   c.organization_id org_id,
                       b.id examination_id,
                       b.name examination_name,
                       d.name paper_name,
                       c.full_name full_name,
                       c.login_name login_name,
                       d.total_score paper_total_score,
                       0 exam_time,
                       b.reexam_times reexam_times,
                       0 max_score,
                       0 avg_score,
                       0 last_score,
                       b.pass_score,
                       all_usergrop(c.id) user_group,
                       -1 final_score,
                       (select name
                          from org_organization
                         where id = c.organization_id) org_name
                
                  from aty_enroll_learner a,
                       aty_examination    b,
                       org_user           c,
                       exm_exam_paper     d
                 where a.activity_id = b.id
                   and a.user_id = c.id
                   and b.aty_paper_id = d.id
                   and not exists
                 (select *
                          from aty_examinees_history
                         where user_id = a.user_id
                           and EXAMINATION_ID = a.ACTIVITY_ID)
                
                ) a
  	) a
)
  </sql>
  
  
  <select id="findByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
     from <include refid="Base_Table" /> A
    <if test="_parameter != null">
      <where>
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    <if test="hasOrderBy">
      order by
      <foreach collection="orderBys" item="orderBy" separator=",">
        ${orderBy}
      </foreach>
    </if>
  </select>
   
   
  <select id="countByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-05-22 20:45.
    -->
    select count(*) from <include refid="Base_Table" /> A
    <if test="_parameter != null">
      <where>
        <include refid="Global.Where_Clause" />
      </where>
    </if>
  </select>
  
  
</mapper>