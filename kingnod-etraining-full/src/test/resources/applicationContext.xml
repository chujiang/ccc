<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 服务器生产环境配置 -->
				<value>file:c:/application.properties</value>
				<value>file:/home/elearning/application.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Spring工具类， 获取applicationContext，spring bean, spring message -->
	<bean class="com.kingnod.core.util.SpringUtils" lazy-init="false"></bean>
	<!-- 系统参数工具类， 根据code获取系统参数的值 -->
	<bean class="com.kingnod.core.util.SysParameterUtils" lazy-init="false" scope="singleton"></bean>
	
	<bean id="messageSource"  class="org.springframework.context.support.ResourceBundleMessageSource">  
        <property name="basenames">  
            <list>  
                <value>i18n.common_message</value>
            	<value>i18n.common_error</value>
            	<value>i18n.system_message</value>
            	<value>i18n.system_error</value>
                <value>i18n.admin-web_message</value>
                <value>i18n.admin-web_error</value>
                <value>i18n.organization_message</value>
                <value>i18n.organization_error</value>
                <value>i18n.exam_message</value>
                <value>i18n.exam_error</value>
                <value>i18n.course_message</value>
                <value>i18n.course_error</value>
                <value>i18n.resource_message</value>
                <value>i18n.resource_error</value>
            </list>  
        </property>  
    </bean>
    
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.kingnod.etraining" />
	<context:annotation-config />
	<tx:annotation-driven />
	<dwr:configuration/>

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- Connection Pooling Info -->
		<!--property name="initialSize" value="${dbcp.initialSize}" / -->
		<!--property name="maxActive" value="${dbcp.maxActive}" / -->
		<!--property name="maxIdle" value="${dbcp.maxIdle}" / -->
		<!--property name="defaultAutoCommit" value="false" / -->
	</bean>

	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
		/> -->

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="com.kingnod.core.extensions.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config-${jdbc.dbtype}.xml" />
		<!-- mapperLocations的值一定要加上/com/kingnod/etraining/， 否则不会从jar中加载Mapper.xml。从spring的PathMatchingResourcePatternResolver.findPathMatchingResources方法中跟踪出解决方法。 -->
		<property name="mapperLocations" value="classpath*:/com/kingnod/etraining/**/${jdbc.dbtype}/*Mapper.xml" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<!--tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" 
		/ -->

	<bean id="scormApiAdapter" class="com.kingnod.etraining.course.adapter.Scorm12APIAdapter">
		<dwr:remote javascript="Scorm12APIAdapter">
    		<dwr:include method="LMSInitilize"/>
    		<dwr:include method="LMSFinish"/>
    		<dwr:include method="LMSGetValue"/>
    		<dwr:include method="LMSSetValue"/>
    		<dwr:include method="LMSCommit"/>
    		<dwr:include method="LMSGetLastError"/>
    		<dwr:include method="LMSGetErrorString"/>
    		<dwr:include method="LMSGetDiagnostic"/>
  		</dwr:remote>
	</bean>




	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
				<property name="databasePlatform" value="org.apache.openjpa.jdbc.sql.H2Dictionary" />
			</bean>
		</property>
	</bean>


	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="deploymentResources" value="classpath*:/workflow/*.bpmn20.xml" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>


	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration"></property>
	</bean>

	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
		
	<!-- quartz要调用的工作类 --> 
</beans>