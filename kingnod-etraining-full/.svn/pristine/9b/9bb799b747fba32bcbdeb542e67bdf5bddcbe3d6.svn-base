<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CourseMessage">
  <resultMap id="BaseResultMap" type="com.kingnod.etraining.report.entity.CourseMessage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-05-15 10:07.
    -->
    <result column="A_USER_NUMBER" jdbcType="DECIMAL" property="userNumber" />
    <result column="A_COURSE_TYPE" jdbcType="VARCHAR" property="courseType" />
    <result column="A_AVG_TOTAL_TIME" jdbcType="DECIMAL" property="avgTotalTime" />
    <result column="A_ACTIVITY_NAME" jdbcType="VARCHAR" property="activityName" />
    <result column="A_ACTIVITY_TYPE" jdbcType="CHAR" property="activityType" />
    <result column="A_ACTIVITY_COMPLETE_NUMBER" jdbcType="DECIMAL" property="activityCompleteNumber" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-05-15 10:07.
    -->
    A.USER_NUMBER as A_USER_NUMBER, A.COURSE_TYPE as A_COURSE_TYPE, A.AVG_TOTAL_TIME as A_AVG_TOTAL_TIME, 
    A.ACTIVITY_NAME as A_ACTIVITY_NAME, A.ACTIVITY_TYPE as A_ACTIVITY_TYPE, A.ACTIVITY_COMPLETE_NUMBER as A_ACTIVITY_COMPLETE_NUMBER
  </sql>
  <select id="findByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultMap="BaseResultMap">
    <!--
      WARNING - @自定义
    -->
    select
    <include refid="Base_Column_List" />
     from 
	 (
    	select 
	    NVL(B.user_number,0) user_number,
	    E.course_type course_type,
	    C.avg_total_time avg_total_time,
	    F.Name activity_name,
	    F.Type activity_type,
	    NVL(F.COMPLETE_NUMBER,0) activity_complete_number
	    from 
	      aty_activity  F 
	       left join (select t_enroll.activity_id,count(t_enroll.user_id) user_number from aty_enroll_learner t_enroll where t_enroll.record_status='A' group by t_enroll.activity_id) B 
	            on F.ACTIVITY_ID=B.activity_id
	       left join (select t_userActivity.activity_id,avg(t_userActivity.Total_Time) avg_total_time from aty_user_activity t_userActivity 
	                         where t_userActivity.Status='C'and t_userActivity.Record_Status='A' group by t_userActivity.activity_id) C
	            on F.ACTIVITY_ID=C.activity_id,
	       aty_elearning D,
	       (
	                     select t_c.object1_id object1_id,wm_concat(t_folder.name) course_type
	                     from cmn_object_relation t_c,res_folder t_folder 
	                     where t_c.object2_id=t_folder.id and t_c.record_status='A' group by t_c.object1_id
	       )E 
	    where F.Record_Status='A' and D.record_status='A' and D.id=F.ACTIVITY_ID 
	    	and F.Folder_Id in (select folder.id from aty_folder folder  where folder.site_id=${params.siteId})
	    	and D.COURSE_ID=E.object1_id
	    	<if test="params.courseType != null">
	    	and D.COURSE_ID in (select 
                                         t_cor.object1_id
                                    from 
                                           res_folder_hierarchy t_f_h,cmn_object_relation t_cor
                                    where t_f_h.folder_id = t_cor.object2_id and t_f_h.record_status='A'and t_cor.record_status='A'
                                    
                                    and t_f_h.hierarchy_id=${params.courseType})
             </if>
	    	<if test="params.start_Time != null">
	    	 and F.Release_Date &gt; #{params.start_Time} 
	    	</if>
	    	<if test="params.end_Time != null">
	    	and F.Release_Date &lt; #{params.end_Time}
	    	</if>
      ) A
    <if test="_parameter != null">
      <where>
        <include refid="Global.Where_Clause" />
      </where>
    </if>
    <if test="hasOrderBy">
      order by
      <foreach collection="orderBys" item="orderBy" separator=",">
        ${orderBy}
      </foreach>
    </if>
  </select>
  
  <select id="countByCriteria" parameterType="com.kingnod.core.criteria.Criteria" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on 2012-05-15 10:07.
    -->
    select count(*) from 
    (
    	select 
	    NVL(B.user_number,0) user_number,
	    E.course_type course_type,
	    C.avg_total_time avg_total_time,
	    F.Name activity_name,
	    F.Type activity_type,
	    NVL(F.COMPLETE_NUMBER,0) activity_complete_number
	    from 
	      aty_activity  F 
	       left join (select t_enroll.activity_id,count(t_enroll.user_id) user_number from aty_enroll_learner t_enroll where t_enroll.record_status='A' group by t_enroll.activity_id) B 
	            on F.ACTIVITY_ID=B.activity_id
	       left join (select t_userActivity.activity_id,avg(t_userActivity.Total_Time) avg_total_time from aty_user_activity t_userActivity 
	                         where t_userActivity.Status='C'and t_userActivity.Record_Status='A' group by t_userActivity.activity_id) C
	            on F.ACTIVITY_ID=C.activity_id,
	       aty_elearning D,
	       (
	                     select t_c.object1_id object1_id,wm_concat(t_folder.name) course_type
	                     from cmn_object_relation t_c,res_folder t_folder 
	                     where t_c.object2_id=t_folder.id and t_c.record_status='A' group by t_c.object1_id
	       )E 
	    where F.Record_Status='A' and D.record_status='A' and D.id=F.ACTIVITY_ID 
	    	and F.Folder_Id in (select folder.id from aty_folder folder  where folder.site_id=${params.siteId})
	    	and D.COURSE_ID=E.object1_id
	    	<if test="params.courseType != null">
	    	and D.COURSE_ID in (select 
                                         t_cor.object1_id
                                    from 
                                           res_folder_hierarchy t_f_h,cmn_object_relation t_cor
                                    where t_f_h.folder_id = t_cor.object2_id and t_f_h.record_status='A'and t_cor.record_status='A'
                                    
                                    and t_f_h.hierarchy_id=${params.courseType})
             </if>
	    	<if test="params.start_Time != null">
	    	 and F.Release_Date &gt; #{params.start_Time} 
	    	</if>
	    	<if test="params.end_Time != null">
	    	and F.Release_Date &lt; #{params.end_Time}
	    	</if>
    ) A
    <if test="_parameter != null">
      <where>
        <include refid="Global.Where_Clause" />
        
      </where>
    </if>
  </select>
 
</mapper>